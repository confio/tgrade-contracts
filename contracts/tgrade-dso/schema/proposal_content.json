{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ProposalContent",
  "anyOf": [
    {
      "description": "Apply a diff to the existing non-voting members. Remove is applied after add, so if an address is in both, it is removed",
      "type": "object",
      "required": [
        "add_remove_non_voting_members"
      ],
      "properties": {
        "add_remove_non_voting_members": {
          "type": "object",
          "required": [
            "add",
            "remove"
          ],
          "properties": {
            "add": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "remove": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "edit_dso"
      ],
      "properties": {
        "edit_dso": {
          "$ref": "#/definitions/DsoAdjustments"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "add_voting_members"
      ],
      "properties": {
        "add_voting_members": {
          "type": "object",
          "required": [
            "voters"
          ],
          "properties": {
            "voters": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "punish_members"
      ],
      "properties": {
        "punish_members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Punishment"
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Decimal": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "DsoAdjustments": {
      "type": "object",
      "properties": {
        "allow_end_early": {
          "description": "If true, and absolute threshold and quorum are met, we can end before voting period finished",
          "type": [
            "boolean",
            "null"
          ]
        },
        "escrow_amount": {
          "description": "Escrow amount to apply after grace period (computed using voting_period)",
          "anyOf": [
            {
              "$ref": "#/definitions/Uint128"
            },
            {
              "type": "null"
            }
          ]
        },
        "name": {
          "description": "Escrow name",
          "type": [
            "string",
            "null"
          ]
        },
        "quorum": {
          "description": "quorum requirement (0.0-1.0)",
          "anyOf": [
            {
              "$ref": "#/definitions/Decimal"
            },
            {
              "type": "null"
            }
          ]
        },
        "threshold": {
          "description": "threshold requirement (0.5-1.0)",
          "anyOf": [
            {
              "$ref": "#/definitions/Decimal"
            },
            {
              "type": "null"
            }
          ]
        },
        "voting_period": {
          "description": "Length of voting period in days",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0.0
        }
      }
    },
    "Punishment": {
      "type": "object",
      "required": [
        "burn_tokens",
        "distribution_list",
        "kick_out",
        "member",
        "slashing_percentage"
      ],
      "properties": {
        "burn_tokens": {
          "description": "Burning instead of distribution. If this is set, `distribution_list` must be empty.",
          "type": "boolean"
        },
        "distribution_list": {
          "description": "Distribution list to send member's slashed escrow amount. If empty (and `burn_tokens` is false), funds are kept in member's escrow. `slashing_percentage` is irrelevant / ignored in that case.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "kick_out": {
          "description": "If set to false, slashed member is demoted to `Pending`. Or not demoted at all, depending on the amount of funds he retains in escrow. If set to true, slashed member is effectively demoted to `Leaving`.",
          "type": "boolean"
        },
        "member": {
          "description": "Member to slash / expel",
          "type": "string"
        },
        "slashing_percentage": {
          "description": "Slashing percentage.",
          "allOf": [
            {
              "$ref": "#/definitions/Decimal"
            }
          ]
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
