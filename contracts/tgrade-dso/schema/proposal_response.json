{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ProposalResponse",
  "type": "object",
  "required": [
    "description",
    "expires",
    "id",
    "proposal",
    "rules",
    "status",
    "title",
    "total_weight",
    "votes"
  ],
  "properties": {
    "description": {
      "type": "string"
    },
    "expires": {
      "$ref": "#/definitions/Expiration"
    },
    "id": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "proposal": {
      "$ref": "#/definitions/ProposalContent"
    },
    "rules": {
      "description": "This is the threshold that is applied to this proposal. Both the rules of the voting contract, as well as the total_weight of the voting group may have changed since this time. That means that the generic `Threshold{}` query does not provide valid information for existing proposals.",
      "allOf": [
        {
          "$ref": "#/definitions/VotingRules"
        }
      ]
    },
    "status": {
      "$ref": "#/definitions/Status"
    },
    "title": {
      "type": "string"
    },
    "total_weight": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "votes": {
      "description": "This is a running tally of all votes cast on this proposal so far.",
      "allOf": [
        {
          "$ref": "#/definitions/Votes"
        }
      ]
    }
  },
  "definitions": {
    "Decimal": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "Expiration": {
      "description": "Expiration represents a point in time when some event happens. It can compare with a BlockInfo and will return is_expired() == true once the condition is hit (and for every block in the future)",
      "anyOf": [
        {
          "description": "AtHeight will expire when `env.block.height` >= height",
          "type": "object",
          "required": [
            "at_height"
          ],
          "properties": {
            "at_height": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        },
        {
          "description": "AtTime will expire when `env.block.time` >= time",
          "type": "object",
          "required": [
            "at_time"
          ],
          "properties": {
            "at_time": {
              "$ref": "#/definitions/Timestamp"
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Never will never expire. Used to express the empty variant",
          "type": "object",
          "required": [
            "never"
          ],
          "properties": {
            "never": {
              "type": "object"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "ProposalContent": {
      "anyOf": [
        {
          "description": "Apply a diff to the existing non-voting members. Remove is applied after add, so if an address is in both, it is removed",
          "type": "object",
          "required": [
            "add_remove_non_voting_members"
          ],
          "properties": {
            "add_remove_non_voting_members": {
              "type": "object",
              "required": [
                "add",
                "remove"
              ],
              "properties": {
                "add": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "remove": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "adjust_voting_rules"
          ],
          "properties": {
            "adjust_voting_rules": {
              "$ref": "#/definitions/VotingRulesAdjustments"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "add_voting_members"
          ],
          "properties": {
            "add_voting_members": {
              "type": "object",
              "required": [
                "voters"
              ],
              "properties": {
                "voters": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Status": {
      "type": "string",
      "enum": [
        "pending",
        "open",
        "rejected",
        "passed",
        "executed"
      ]
    },
    "Timestamp": {
      "description": "A point in time in nanosecond precision.\n\nThis type can represent times from 1970-01-01T00:00:00Z to 2554-07-21T23:34:33Z.",
      "allOf": [
        {
          "$ref": "#/definitions/Uint64"
        }
      ]
    },
    "Uint64": {
      "description": "A thin wrapper around u64 that is using strings for JSON encoding/decoding, such that the full u64 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u64` to get the value out:\n\n``` # use cosmwasm_std::Uint64; let a = Uint64::from(42u64); assert_eq!(a.u64(), 42);\n\nlet b = Uint64::from(70u32); assert_eq!(b.u64(), 70); ```",
      "type": "string"
    },
    "Votes": {
      "type": "object",
      "required": [
        "abstain",
        "no",
        "veto",
        "yes"
      ],
      "properties": {
        "abstain": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "no": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "veto": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "yes": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "VotingRules": {
      "type": "object",
      "required": [
        "allow_end_early",
        "quorum",
        "threshold",
        "voting_period"
      ],
      "properties": {
        "allow_end_early": {
          "description": "If true, and absolute threshold and quorum are met, we can end before voting period finished",
          "type": "boolean"
        },
        "quorum": {
          "description": "quorum requirement (0.0-1.0)",
          "allOf": [
            {
              "$ref": "#/definitions/Decimal"
            }
          ]
        },
        "threshold": {
          "description": "threshold requirement (0.5-1.0)",
          "allOf": [
            {
              "$ref": "#/definitions/Decimal"
            }
          ]
        },
        "voting_period": {
          "description": "Length of voting period in days",
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        }
      }
    },
    "VotingRulesAdjustments": {
      "type": "object",
      "properties": {
        "allow_end_early": {
          "description": "If true, and absolute threshold and quorum are met, we can end before voting period finished",
          "type": [
            "boolean",
            "null"
          ]
        },
        "quorum": {
          "description": "quorum requirement (0.0-1.0)",
          "anyOf": [
            {
              "$ref": "#/definitions/Decimal"
            },
            {
              "type": "null"
            }
          ]
        },
        "threshold": {
          "description": "threshold requirement (0.5-1.0)",
          "anyOf": [
            {
              "$ref": "#/definitions/Decimal"
            },
            {
              "type": "null"
            }
          ]
        },
        "voting_period": {
          "description": "Length of voting period in days",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0.0
        }
      }
    }
  }
}
