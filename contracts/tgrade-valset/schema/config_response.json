{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ConfigResponse",
  "type": "object",
  "required": [
    "max_validators",
    "membership",
    "min_weight"
  ],
  "properties": {
    "max_validators": {
      "description": "The maximum number of validators that can be included in the Tendermint validator set. If there are more validators than slots, we select the top N by membership weight descending. (In case of ties at the last slot, select by \"first\" tendermint pubkey lexicographically sorted).",
      "type": "integer",
      "format": "uint32",
      "minimum": 0.0
    },
    "membership": {
      "description": "address of a cw4 contract with the raw membership used to feed the validator set",
      "allOf": [
        {
          "$ref": "#/definitions/Cw4Contract"
        }
      ]
    },
    "min_weight": {
      "description": "minimum weight needed by an address in `membership` to be considered for the validator set. 0-weight members are always filtered out. TODO: if we allow sub-1 scaling factors, determine if this is pre-/post- scaling (use weight for cw4, power for tendermint)",
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "scaling": {
      "description": "A scaling factor to multiply cw4-group weights to produce the tendermint validator power (TODO: should we allow this to reduce weight? Like 1/1000?)",
      "type": [
        "integer",
        "null"
      ],
      "format": "uint32",
      "minimum": 0.0
    }
  },
  "definitions": {
    "Cw4Contract": {
      "description": "Cw4Contract is a wrapper around HumanAddr that provides a lot of helpers for working with cw4 contracts\n\nIf you wish to persist this, convert to Cw4CanonicalContract via .canonical()",
      "allOf": [
        {
          "$ref": "#/definitions/HumanAddr"
        }
      ]
    },
    "HumanAddr": {
      "type": "string"
    }
  }
}
